{
  "name": "markdown-it-container",
  "version": "2.0.0",
  "description": "Plugin to create block-level custom containers for markdown-it markdown parser",
  "repository": {
    "type": "git",
    "url": "git://github.com/markdown-it/markdown-it-container.git"
  },
  "license": "MIT",
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "markdown-it-plugin",
    "markdown-it",
    "markdown"
  ],
  "devDependencies": {
    "browserify": "*",
    "coveralls": "^2.11.2",
    "eslint": "0.13.0",
    "eslint-plugin-nodeca": "^1.0.0",
    "istanbul": "*",
    "markdown-it": "git://github.com/markdown-it/markdown-it.git",
    "markdown-it-testgen": "~0.1.0",
    "mocha": "*",
    "uglify-js": "*"
  },
  "readme": "# markdown-it-container\n\n[![Build Status](https://img.shields.io/travis/markdown-it/markdown-it-container/master.svg?style=flat)](https://travis-ci.org/markdown-it/markdown-it-container)\n[![NPM version](https://img.shields.io/npm/v/markdown-it-container.svg?style=flat)](https://www.npmjs.org/package/markdown-it-container)\n[![Coverage Status](https://img.shields.io/coveralls/markdown-it/markdown-it-container/master.svg?style=flat)](https://coveralls.io/r/markdown-it/markdown-it-container?branch=master)\n\n> Plugin for creating block-level custom containers for [markdown-it](https://github.com/markdown-it/markdown-it) markdown parser.\n\n__v2.+ requires `markdown-it` v5.+, see changelog.__\n\nWith this plugin you can create block containers like:\n\n```\n::: warning\n*here be dragons*\n:::\n```\n\n.... and specify how they should be rendered. If no renderer defined, `<div>` with\ncontainer name class will be created:\n\n```html\n<div class=\"warning\">\n<em>here be dragons</em>\n</div>\n```\n\nMarkup is the same as for [fenced code blocks](http://spec.commonmark.org/0.18/#fenced-code-blocks).\nDifference is, that marker use another character and content is rendered as markdown markup.\n\n\n## Installation\n\nnode.js, browser:\n\n```bash\n$ npm install markdown-it-container --save\n$ bower install markdown-it-container --save\n```\n\n\n## API\n\n```js\nvar md = require('markdown-it')()\n            .use(require('markdown-it-container'), name [, options]);\n```\n\nParams:\n\n- __name__ - container name (mandatory)\n- __options:__\n   - __validate__ - optional, function to validate tail after opening marker, should\n     return `true` on success.\n   - __render__ - optional, renderer function for opening/closing tokens.\n   - __marker__ - optional (`:`), character to use in delimiter.\n\n\n## Example\n\n```js\nvar md = require('markdown-it')();\n\nmd.use(require('markdown-it-container'), 'spoiler', {\n\n  validate: function(params) {\n    return params.trim().match(/^spoiler\\s+(.*)$/);\n  },\n\n  render: function (tokens, idx) {\n    var m = tokens[idx].info.trim().match(/^spoiler\\s+(.*)$/);\n\n    if (tokens[idx].nesting === 1) {\n      // opening tag\n      return '<details><summary>' + m[1] + '</summary>\\n';\n\n    } else {\n      // closing tag\n      return '</details>\\n';\n    }\n  }\n});\n\nconsole.log(md.render('::: spoiler click me\\n*content*\\n:::\\n'));\n\n// Output:\n//\n// <details><summary>click me</summary>\n// <p><em>content</em></p>\n// </details>\n```\n\n## License\n\n[MIT](https://github.com/markdown-it/markdown-it-container/blob/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/markdown-it/markdown-it-container/issues"
  },
  "homepage": "https://github.com/markdown-it/markdown-it-container",
  "_id": "markdown-it-container@2.0.0",
  "_shasum": "0019b43fd02eefece2f1960a2895fba81a404695",
  "_from": "markdown-it-container@>=2.0.0 <3.0.0",
  "_resolved": "https://registry.npmjs.org/markdown-it-container/-/markdown-it-container-2.0.0.tgz"
}
